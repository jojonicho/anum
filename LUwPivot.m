function [L, U, p] = LUwPivot(A)  [n, n] = size(A);  % initialize lower triangle matrix  L = eye(n);  p = 1:n;    for k=1:n-1    % Find row l, where l has the largest value    [m, l] = max(abs(A(k:n, k)));    % Adjust max indexing    l += (k - 1);    % swap l-th row and k-th row    tmp = A(l, :);    A(l, :) = A(k, :);    A(k, :) = tmp;        % swap p vector as well    tmp = p(l);    p(l) = p(k);    p(k) = tmp;        % Swap l-th row and k-th row of L    % Swap processed row only, maintain unit lower triangular property    tmp = L(l, 1:k-1);    L(l, 1:k-1) = L(k, 1:k-1);    L(k, 1:k-1) = tmp;        for i=k+1:n      % Find m untuk setiap baris i      L(i, k) = A(i,k)/A(k, k);        % Eliminasi baris i+1 .. n      A(i,:) = A(i,:) - L(i, k) * A(k,:);    endfor#    disp(A);  endfor  U = A;    % P = zeros(n, n);  % for i=1:n  %  P(i, p(i)) = 1  % endfor  endfunction